version: '3.8'

services:
  caddy:
    image: caddy:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_caddy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./conf/Caddyfile.${COMPOSE_PROJECT_ENV}:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ./data/static_site:/usr/share/caddy/static_site
    networks:
      - frontend
    depends_on:
      - moodle
      - wordpress
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  moodle:
    build:
      context: ./apps/moodle
      dockerfile: ${COMPOSE_PROJECT_ENV}.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${COMPOSE_PROJECT_NAME}_moodle
    volumes:
      - ./data/moodle_data/html/moodle:/var/www/html
      - ./data/moodle_data/moodledata:/var/www/moodledata
    # To achieve data persistence for the Moodle file, download moodle with command instead of Dockerfile
    command: >
      bash -c "
      if [ ! -f /var/www/html/version.php ]; then
        wget https://download.moodle.org/download.php/direct/stable403/moodle-latest-403.tgz -O moodle.tgz &&
        tar -xzvf moodle.tgz --strip-components=1 &&
        rm moodle.tgz;
      fi;
      apache2-foreground
      "
    environment:
      MOODLE_DOCKER_WEB_HOST: ${MOODLE_DOCKER_WEB_HOST:-lms.local.bombano.com}
      MOODLE_DATABASE_HOST: ${MOODLE_DATABASE_HOST:-moodle-db}
      MOODLE_DATABASE_NAME: ${MOODLE_DATABASE_NAME:-exampledb}
      MOODLE_DATABASE_USER: ${MOODLE_DB_USER:-exampleuser}
      MOODLE_DATABASE_PASSWORD: ${MOODLE_DB_PASSWORD:-examplepass}
    depends_on:
      - moodle-db
    networks:
      - backend
      - frontend
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  moodle-db:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}_moodle-db
    volumes:
      - ./data/moodle_data/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MOODLE_DB_NAME:-exampledb}
      MYSQL_USER: ${MOODLE_DB_USER:-exampleuser}
      MYSQL_PASSWORD: ${MOODLE_DB_PASSWORD:-examplepass}
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - backend
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  wordpress:
    depends_on:
      - wordpress-db
    image: wordpress:latest
    container_name: ${COMPOSE_PROJECT_NAME}_wordpress
    volumes:
      - ./data/wordpress_data/html/wordpress:/var/www/html
    environment:
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER:-exampleuser}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME:-exampledb}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD:-examplepass}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST:-wordpress-db}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG:-0}
    networks:
      - backend
      - frontend
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  wordpress-db:
    image: mysql:8.0
    volumes:
      - ./data/wordpress_data/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${WORDPRESS_DB_USER:-exampleuser}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME:-exampledb}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD:-examplepass}
    networks:
      - backend
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  
  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    networks:
      - backend
    volumes:
      - ./data/redis:/data
    restart: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  caddy_data: {}
  caddy_config: {}
  moodle_data: {}
  wordpress_data: {}

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
